openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
tags:
  - name: Roles
    description: Операции с ролями и пользователями
  - name: Sensors
    description: Операции для работы с Sensors
  - name: Sensor_type
    description: Операции для работы с Sensor_type
  - name: Equipment
    description: Операции для работы с Equipment
  - name: Parameter
    description: Операции для работы с Parameter
  - name: Sensor_parameter
    description: Операции для работы с Sensor_parameter
  - name: Sensor_Record
    description: Операции для работы с Sensor_Record
  - name: Configuration
    description: Операции для работы с Configuration
servers:
  - url: http://127.0.0.1:5000/
paths:
  /api/users/roles:
    get:
      summary: Получите все Роли
      tags:
        - Roles
      responses:
        '200':
          description: Список Ролей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
        - BearerAuth: [ ]
  /api/users/protected:
    get:
      summary: Получить роль
      tags:
        - Roles
      responses:
        '200':
          description: тест роли
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: []
  /api/users/:
    get:
      summary: Получите всех пользователей
      tags:
        - Roles
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - BearerAuth: []
  /api/users/add:
    post:
      summary: Добавить пользователя
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username
                password:
                  type: string
                  description: password
                email:
                  type: string
                  description: email
                role:
                  type: string
                  description: role
              required:
                - username
                - password
                - email
                - role
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: []
  /api/users/{id}:
    delete:
      summary: Удалить пользователя
      tags:
        - Roles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID пользователя
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: []
    put:
      summary: Изменить пользователя
      tags:
        - Roles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username
                password:
                  type: string
                  description: password
                email:
                  type: string
                  description: email
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: []
  /api/users/token:
    post:
      summary: Login
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Логин
                password:
                  type: string
                  description: Пароль
              required:
                - login
                - password
      responses:
        '200':
          description: Токен jwt
          content:
            application/json:
              schema:
                type: string

  /api/sensors/:
    get:
      summary: Получите всех Sensors
      tags:
        - Sensors
      responses:
        '200':
          description: Список Sensors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
      security:
        - BearerAuth: [ ]
  /api/sensors/add:
    post:
      summary: Добавить Sensor
      tags:
        - Sensors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                data_source:
                  type: string
                  description: data_source
                sensor_type_id:
                  type: integer
                  description: sensor_type_id
                equipment_id:
                  type: integer
                  description: equipment_id
              required:
                - name
                - data_source
                - sensor_type_id
                - equipment_id
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/sensors/{id}:
    delete:
      summary: Удалить Sensor
      tags:
        - Sensors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    put:
      summary: Изменить Sensor
      tags:
        - Sensors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                data_source:
                  type: string
                  description: data_source
                sensor_type_id:
                  type: integer
                  description: sensor_type_id
                equipment_id:
                  type: integer
                  description: equipment_id
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]

  /api/sensor-type/:
    get:
      summary: Получите всех Sensor_type
      tags:
        - Sensor_type
      responses:
        '200':
          description: Список Sensor_type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor_type'
      security:
        - BearerAuth: [ ]
  /api/sensor-type/add:
    post:
      summary: Добавить Sensor_type
      tags:
        - Sensor_type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
              required:
                - name
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/sensor-type/{id}:
    delete:
      summary: Удалить Sensor_type
      tags:
        - Sensor_type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor_type
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    put:
      summary: Изменить Sensor_type
      tags:
        - Sensor_type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor_type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]

  /api/equipment/:
    get:
      summary: Получите всех Equipment
      tags:
        - Equipment
      responses:
        '200':
          description: Список Equipment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
      security:
        - BearerAuth: [ ]
  /api/equipment/add:
    post:
      summary: Добавить Equipment
      tags:
        - Equipment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
              required:
                - name
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/equipment/{id}:
    delete:
      summary: Удалить Equipment
      tags:
        - Equipment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Equipment
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    put:
      summary: Изменить Equipment
      tags:
        - Equipment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Equipment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/equipment/{id}/sensors:
    get:
      summary: Получить все датчики у оборудования
      tags:
        - Equipment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Equipment
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
      security:
        - BearerAuth: [ ]

  /api/parameter/:
    get:
      summary: Получите всех Parameter
      tags:
        - Parameter
      responses:
        '200':
          description: Список Parameter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
      security:
        - BearerAuth: [ ]
  /api/parameter/add:
    post:
      summary: Добавить Parameter
      tags:
        - Parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                unit:
                  type: string
                  description: unit
              required:
                - name
                - unit
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/parameter/{id}:
    delete:
      summary: Удалить Parameter
      tags:
        - Parameter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Parameter
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    put:
      summary: Изменить Parameter
      tags:
        - Parameter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                unit:
                  type: string
                  description: unit
              required:
                - name
                - unit
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]

  /api/sensors_parameters/{id}:
    get:
      summary: Получите всех Sensor_parameter
      tags:
        - Sensor_parameter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor
      responses:
        '200':
          description: Список Sensor_parameter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor_parameter'
      security:
        - BearerAuth: [ ]
  /api/sensors_parameters/{id}/{parameter_id}:
    delete:
      summary: Удалить Sensor_parameter
      tags:
        - Sensor_parameter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor
        - name: parameter_id
          in: path
          required: true
          schema:
            type: integer
          description: ID parameter
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    post:
      summary: Добавить Sensor_parameter
      tags:
        - Sensor_parameter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor
        - name: parameter_id
          in: path
          required: true
          schema:
            type: integer
          description: ID parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Название ключа параметра в json файле
              required:
                - key
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]

  /api/sensor_records/:
    get:
      summary: Получите всех Sensor_records
      tags:
        - Sensor_Record
      responses:
        '200':
          description: Список Sensor_records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor_Record'
      security:
        - BearerAuth: [ ]
  /api/sensor_records/{id}:
    get:
      summary: Sensor_Record для одного датчика
      tags:
        - Sensor_Record
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor_Record
      responses:
        '200':
          description: Список Sensor_records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor_Record'
      security:
        - BearerAuth: [ ]
  /api/sensor_records/raw_data/{id}:
    get:
      summary: Sensor_Record для одного датчика
      tags:
        - Sensor_Record
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID Sensor_Record
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
          description: Начальная дата в формате YYYY-MM-DD
          required: false
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: Конечная дата в формате YYYY-MM-DD
          required: false
        - name: parameter
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Список Sensor_records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor_Record'
      security:
        - BearerAuth: [ ]


  /api/configuration/{user_id}/{equipment_id}:
    get:
      summary: Получить Configuration для одного пользователя
      tags:
        - Configuration
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID User
        - name: equipment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID equipment
      responses:
        '200':
          description: Configuration для одного пользователя
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    delete:
      summary: Удалить Configuration
      tags:
        - Configuration
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID User
        - name: equipment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID equipment
      responses:
        '200':
          description: Результат
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    post:
      summary: Добавить Configuration для одного пользователя
      tags:
        - Configuration
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID User
        - name: equipment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID equipment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: string
                  description: json config
              required:
                - config
      responses:
        '200':
          description: Configuration для одного пользователя
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
    put:
      summary: Изменить Configuration для одного пользователя
      tags:
        - Configuration
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID User
        - name: equipment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID equipment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: string
                  description: json config
              required:
                - config
      responses:
        '200':
          description: Configuration для одного пользователя
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
  /api/configuration/{user_id}/{equipment_id}/apply:
    get:
      summary: Применить Configuration для одного пользователя
      tags:
        - Configuration
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID User
        - name: equipment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID equipment
        - name: last_update
          in: query
          schema:
            type: string
            format: date-time
          description: Начальная дата в формате YYYY-MM-DD
          required: true
      responses:
        '200':
          description: Список значений Sensor_records
          content:
            application/json:
              schema:
                type: integer
      security:
        - BearerAuth: [ ]
  /api/configuration/functions:
    get:
      summary: Получить функции
      tags:
        - Configuration
      responses:
        '200':
          description: Список функции
          content:
            application/json:
              schema:
                type: string
      security:
        - BearerAuth: [ ]
components:
  schemas:
    Role:
      type: object
      description: Роль пользователя
      properties:
        name:
          type: string
          description: Название роли
    User:
      type: object
      description: Пользователь
      properties:
        id:
          type: integer
          description: ID пользователя
        username:
          type: string
          description: Имя пользователя
        email:
          type: string
          description: Email пользователя
        role:
          type: string
          description: Роль пользователя
    Sensor:
      type: object
      description: Sensor
      properties:
        id:
          description: Id Sensor
          type: integer
        data_source:
          description: data_source Sensor
          type: string
        sensor_type:
          description: sensor_type Sensor
          type: string
        equipment:
          description: equipment Sensor
          type: string
    Sensor_type:
      type: object
      description: Sensor_type
      properties:
        id:
          description: Id Sensor_type
          type: integer
        name:
          type: string
          description: Название
    Equipment:
      type: object
      description: Equipment
      properties:
        id:
          description: Id Equipment
          type: integer
        name:
          type: string
          description: Название
    Parameter:
      type: object
      description: Parameter
      properties:
        id:
          description: Id Parameter
          type: integer
        name:
          type: string
          description: Название
        unit:
          type: string
          description: Еденицы измерения
    Sensor_parameter:
      type: object
      description: Sensor_parameter
      properties:
        id:
          description: Id Sensor_parameter
          type: integer
        sensor_id:
          type: integer
          description: Id sensor
        parameter_id:
          type: integer
          description: Id sensor
        key:
          type: string
          description: Название ключа параметра в json файле
    Sensor_Record:
      type: object
      description: Sensor_Record
      properties:
        id:
          description: Id Sensor_Record
          type: integer
        sensor_id:
          type: integer
          description: Id sensor
        parameter_id:
          type: integer
          description: Id sensor
        timestamp:
          type: integer
          description: Время
        value:
          type: integer
          description: Значение
    Configuration:
      type: object
      description: Json Configuration
      properties:
        user_id:
          description: Id Sensor_Record
          type: integer
        equipment_id:
          description: Id equipment
          type: integer
        config:
          description: Json Configuration
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT